#!/bin/sh

set -eux

_usage() {
  cat >&2 <<EOF
usage:
  myfreebsd bwdev
  myfreebsd bk
  myfreebsd bkdev
  myfreebsd ci
  myfreebsd dirdeps
EOF
  exit 64 # EX_USAGE
}

buildworld_dev() {
  # NOTE rebuilding world without ccache takes a while, so uncomment this only if you need it.
  #make -C "${src}" ${_make_args} cleanworld
  make -C "${src}" -j"${parallelism}" ${_make_args} buildworld "$@"
}

buildkernel_parallel() {
  make -C "${src}" ${_make_args} KERNCONF=SIVAKERN cleankernel
  make -C "${src}" -j"${parallelism}" -k ${_make_args} KERNCONF=SIVAKERN buildkernel
}

buildkernel_dev_single() {
  make -C "${src}" -j1 ${_make_args} KERNCONF=SIVAKERN buildkernel
}

dirdeps_build() {
  make -C "${src}" -j"${parallelism}" \
    __MAKE_CONF=${top}/dev/make.conf \
    SRCCONF=${top}/dev/src.conf \
    SRC_ENV_CONF=${top}/dev/dirdeps_src-env.conf \
    WITH_DIRDEPS_BUILD= \
    the-lot
}

_ci() {
  doas make -C "${src}/tests/ci" ${_make_args} "$@" clean || true
  doas make -C "${src}/tests/ci" ${_make_args} "$@" ci
  #make -C "${src}/tests/ci" ${_make_args} \
  #  -DNO_ROOT \
  #  TIMEOUT_MS="16200000" \
  #  "$@" \
  #  ci
}

_ci_parallel() {
  _cache="$HOME/.cache/myfreebsd"
  _outdir="${_cache}/parci"
  _ci_img_root="$(make -f ${top}/dev/src-env.conf -V MAKEOBJDIRPREFIX)${src}/${target}.${target_arch}/tests/ci/ci-buildimage"
  #_num_vms="$(($(nproc)/2-1))"
  _num_vms=14
  _vmseq="$(seq 0 $((${_num_vms} - 1)))"
  _cidirs="$(seq 0 $((${_num_vms} - 1)) | sed "s,^,${_outdir}/ci,")"

  mkdir -p ${_cidirs}

  doas make -C "${src}/tests/ci" ${_make_args} TARGET="${target}" TARGET_ARCH="${target_arch}" clean || true
  doas make -C "${src}/tests/ci" ${_make_args} TARGET="${target}" TARGET_ARCH="${target_arch}" \
    CITYPE=full \
    CIDISK="${_outdir}/disk.raw" \
    SWAPSIZE=256m \
    VMSIZE=5g \
    ci-buildimage

  doas zfs create -p zroot/bhyve
  doas zfs destroy -Rf zroot/bhyve/freebsdciskel@fresh || true
  doas zfs create -pV 6g zroot/bhyve/freebsdciskel
  doas dd if="${_outdir}/disk.raw" of=/dev/zvol/zroot/bhyve/freebsdciskel bs=1M
  doas zfs snapshot zroot/bhyve/freebsdciskel@fresh

  kyua list -k "${_ci_img_root}/usr/tests/Kyuafile" | sed 's/:.*$//' | sort -Ru > "${_outdir}/all_kyua_tests.txt"
  split -dl $(($(wc -l < "${_outdir}/all_kyua_tests.txt")/${_num_vms} + 1)) "${_outdir}/all_kyua_tests.txt" "${_outdir}/kyua_filters_"
  for _vm in ${_vmseq}; do
    doas zfs clone zroot/bhyve/freebsdciskel@fresh "zroot/bhyve/ci${_vm}"
    cp "${_outdir}/kyua_filters_$(printf '%.2d' ${_vm})" "${_outdir}/ci${_vm}/kyua_test_filters.txt"
    cp "${top}/porch_ci_${target_arch}.sh" "${_outdir}/ci${_vm}/porch_ci.sh"
  done
  echo "${_cidirs}" | time -h parallel --progress --bar --eta 'cd {} && doas ./porch_ci.sh'
  cat "${_outdir}"/ci*/test-reports/test-report.txt > "${_outdir}/latest_${target_arch}_report.txt"

  echo "All output logs are in ${_outdir}"
  ls -alh "${_outdir}"
}

realpath="$(realpath "$0")"
top="$(dirname "${realpath}")"
_make_args="__MAKE_CONF=${top}/dev/make.conf MAKECONF=${top}/dev/make.conf SRCCONF=${top}/dev/src.conf SRC_ENV_CONF=${top}/dev/src-env.conf"

while getopts j:s:t: name
do
  case "${name}" in
    j) parallelism="${OPTARG}" ;;
    s) src="${OPTARG}" ;;
    t) target_arch="${OPTARG}" ;;
    ?)
      echo "Usage: $0: [-j numjobs] command" >&2
      exit 64 # EX_USAGE
      ;;
    *) ;;
  esac
done
shift $((OPTIND - 1))
: "${parallelism:=$(nproc)}"
: "${src:=${HOME}/src/freebsd-src}"
: "${target_arch:=$(uname -p)}"

case "${target_arch}" in
  amd64) target=amd64 ;;
  aarch64) target=arm64 ;;
  riscv64) target=riscv ;;
  *)
    echo "Unknown TARGET_ARCH=${target_arch}" >&2
    exit 64 # EX_USAGE
    ;;
esac

cmd="$1"
shift

case "${cmd}" in
  bwdev) buildworld_dev "$@" ;;
  bk) buildkernel_parallel ;;
  bkdev) buildkernel_dev_single ;;
  dirdeps) dirdeps_build ;;
  ci) _ci "$@" ;;
  parci) _ci_parallel "$@" ;;
  *)
      echo "ERROR: unrecognized command '${cmd}'" >&2
      _usage
esac
