# Ensure the jail stays alive even if no processes are running inside.
# This is to keep the mounts alive in case nothing is inside during setup
persist;

# TODO choose a devfs_ruleset
mount.devfs;

# Needed for ping, traceroute, etc.
allow.raw_sockets;

# Maintain a clean ENV before starting each jail
exec.clean;

# Set timeouts to avoid startup/shutdown scripts running forever
exec.timeout = 30;
stop.timeout = 30;

path = "/empt/jails/${name}";

host.hostname = "${name}.%%ORG_DOMAIN%%";

# NOTE See this in case ipv6 breaks again:
# * https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=271069
# * https://dan.langille.org/2023/03/10/is-your-jail-not-getting-an-ipv6-address-soon-enough-blame-dad/
exec.start += "/bin/sleep 5";
exec.start += "/bin/sh /etc/rc";

# TODO is this the best way to use
# Enable/disable the jail in each respective /etc/hosts file
exec.start += "grep -qxF '127.1.1.${jid} localhost' || printf '1i\\n127.1.1.${jid} localhost\\n.\\nxit\\n' | ex -s /etc/hosts";
exec.poststart += "grep -qxF '127.1.1.${jid} ${name}.home.arpa ${name}' || printf '1i\\n127.1.1.${jid} ${name}.home.arpa ${name}\\n.\\nxit\\n' | ex -s /etc/hosts";
exec.prestop += "sed -i '' -e '/127.1.1.${jid} ${name}.home.arpa ${name}/d' /etc/hosts";
exec.stop += "sed -i '' -e '/127.1.1.${jid} localhost/d' /etc/hosts";

exec.stop += "/bin/sh /etc/rc.shutdown";

# Common fstab to share /usr/ports at a minimum
mount.fstab = "/empt/synced/rw/fstab.d/${name}.fstab";

ip4.addr = "lo0|127.1.1.${jid}/32";

# TODO figure out a way to generate link-local loopback ipv6 without the '2' scope identifier.
# Waiting on https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=206012
ip6.addr = "lo0|fe80:2::eeee:${jid}/128";

# TODO programmatically query name of network interface instead of 're0'
#ip6.addr += "re0|%%ULA_PREFIX%%::eeee:${jid}/128";
